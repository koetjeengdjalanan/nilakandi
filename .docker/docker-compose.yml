name: Nilakandi

services:
  web:
    hostname: Nilakandi-web
    container_name: Nilakandi-web
    build:
      context: ..
      dockerfile: .docker/web/Dockerfile
    restart: always
    user: arjuna
    entrypoint: poetry run python manage.py entry_point
    stdin_open: true
    tty: true
    ports:
      - "21180:21180"
    volumes:
      - ../.env:/app/.env:ro
      - ../gunicorn.conf.py:/app/gunicorn.conf.py:ro
      - azure-reports:/app/staticfiles/azure-reports
      - temp-uploads:/tmp
    networks:
      - nilakandi-net
    depends_on:
      - db
      - redis

  flower:
    hostname: Nilakandi-flower
    container_name: Nilakandi-flower
    image: mher/flower:0.9.7
    command: ["flower", "--broker=redis://Nilakandi-redis:6379/0", "--port=5555", "--persistent=True", "--db=/data/flower.db"]
    volumes:
      - flower-data:/data
    ports:
      - 21155:5555
    networks:
      - nilakandi-net
    depends_on:
      - redis
    environment:
      - FLOWER_BASIC_AUTH=admin:admin123

  workers:
    hostname: Nilakandi-worker
    container_name: Nilakandi-worker
    build:
      context: ..
      dockerfile: .docker/web/Dockerfile
    restart: on-failure:5
    user: arjuna
    command: poetry run celery -A config.settings worker --loglevel=info -E --pool=gevent --autoscale=200,6 -Q priority,default
    tty: true
    volumes:
      - ../.env:/app/.env:ro
      - azure-reports:/app/staticfiles/azure-reports
      - temp-uploads:/tmp
    networks:
      - nilakandi-net
    depends_on:
      - web

  db:
    hostname: Nilakandi-db
    container_name: Nilakandi-db
    image: postgres:16
    command: ['postgres', '-c', 'max_connections=1000']
    restart: always
    volumes:
      - nilakandi-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: arjuna
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: nilakandi
    ports:
      - 21132:5432
    networks:
      - nilakandi-net

  redis:
    hostname: Nilakandi-redis
    container_name: Nilakandi-redis
    image: redis:6
    restart: always
    networks:
      - nilakandi-net

networks:
  nilakandi-net:
    driver: bridge

volumes:
  nilakandi-db-data:
    driver: local
  flower-data:
    driver: local
  azure-reports:
    driver: local
    driver_opts:
      type: none
      device: /mnt/mydisk/azure-reports
      o: bind,rw
  temp-uploads:
    driver: local